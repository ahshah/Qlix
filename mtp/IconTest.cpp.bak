//Copyright 2007 Ali Shah
//Qlix and this program are distributed under the terms of the GNU General Public License


#include <string>
#include <iostream>
#include <sys/mman.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <vector>
#include <errno.h>
#include "Icon.h"

using namespace std;

unsigned int getSize(int in_fd)
{
    struct stat buffer;
    fstat(in_fd, &buffer);
    return buffer.st_size;
}

void write (byte* buf, int size)
{
    FILE* outfile = fopen("convertedv2.bmp", "w");
    if (outfile == NULL)
        cout << "Error opening file in w mode" << endl;

    int ret = fwrite((void*)buf, 1, size, outfile);
    if (ret == -1)
        cout << "error: " << errno << endl;
    cout << "Wrote: " << ret << " bytes out of " << size << endl; 
}

int main()
{
    int _fd = open("convertthis.ico", O_RDONLY);
    if (_fd == -1)
        exit (-1);

    count_t size = getSize(_fd);
    byte*  file = (byte*) mmap(NULL,size, PROT_READ, MAP_PRIVATE, _fd, 0);
    cout << "Errno is : " << errno << endl;
    char* s = strerror(errno);
    cout << "errno is : " <<s << endl;
    Icon DoDad (file);
    count_t image_size = DoDad.GetBestImageSize();
    byte image[image_size];
    DoDad.Extract(image);
    write(image, image_size);
    return 0;
}

